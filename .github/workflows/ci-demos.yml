name: demos

on:
  push:
    branches: [ develop ]
    paths-ignore:
      - 'docs/**'
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  # 1) Test the code on multiple Python versions + OSes
  test:
    name: Tests on ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11, 3.12]
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pytest
          python -m pip install .
      
    #  - name: Run tests
    #    if: runner.os != 'Windows'
    #    run: |
    #      pytest tests/python/test*.py --maxfail=1 --disable-warnings --verbose
      - name: Run demos on Non-Windows
        run: |
          for file in demos/*.py; do
           if [ "$file" = "demos/download_data.py" ]; then
             echo "Skipping $file"
             continue
           fi
           echo "Running $file"
            python "$file"
          done
        if: matrix.os != 'windows-latest'  
     # - name: pip install Windows
     #   shell: pwsh
     #   run: |
     #    pip install .
         #if ($LastExitCode -eq 0) {
       #dtcc-download-demo-data
       # If dtcc-download-demo-data also succeeded, rename demo-data to data
       #if ($LastExitCode -eq 0) {
       # Move-Item -Path demo-data -Destination data
        #}
          #}
     #   if: matrix.os == 'windows-latest'
      - name: Run demos on Windows
        shell: pwsh
        run: |
           Push-Location demos
           $files = Get-ChildItem *.py
           foreach ($file in $files) {
           if ($file.Name -eq 'download_data.py') {
           Write-Host "Skipping $($_.Name)"
           continue
           }
           Write-Host "Running $($file.Name)"
           python $($file.Name)
           }
           Pop-Location
        if: matrix.os == 'windows-latest'
      #- name: run tests on MacOS/Linux
      #  run: cd demos && ls -alt
      #  if: matrix.os != 'windows-latest'
      #- name: run tests on MacOS/Linux
      #  run: cd demos && dir 
      #  if: matrix.os == 'windows-latest'
   
